name: 发布 Docker 镜像到阿里云

on:
  workflow_dispatch:  # Manual trigger
  push:
    tags:
      - 'v*'
    branches:
      - main
    paths:
      - '**'
      - '.github/workflows/docker-aliyun.yml'

jobs:
  build_and_push:
    name: 构建并推送多架构镜像
    environment: beilv
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: 获取版本信息
        id: version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            # 推送 tag 触发 (如 v1.0.1)
            VERSION=${GITHUB_REF#refs/tags/}
            echo "VERSION=$VERSION" >> $GITHUB_ENV
            echo "IS_TAG=true" >> $GITHUB_ENV
            echo "✅ 版本来自 tag: $VERSION"
          else
            # 推送 main 分支触发，使用 commit SHA 前7位
            COMMIT_SHA=$(git rev-parse --short HEAD)
            VERSION="dev-${COMMIT_SHA}"
            echo "VERSION=$VERSION" >> $GITHUB_ENV
            echo "IS_TAG=false" >> $GITHUB_ENV
            echo "✅ 版本来自 commit: $VERSION"
          fi
          echo "$VERSION" > VERSION

      - name: 设置 Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 登录阿里云容器镜像服务
        uses: docker/login-action@v3
        with:
          registry: crpi-4z4v1n5g8hbg9g3x.cn-hangzhou.personal.cr.aliyuncs.com
          username: ${{ secrets.ALIYUN_DOCKER_USER }}
          password: ${{ secrets.ALIYUN_DOCKER_TOKEN }}

      - name: 提取元数据 (标签)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            crpi-4z4v1n5g8hbg9g3x.cn-hangzhou.personal.cr.aliyuncs.com/beilv-agent/new-api

      - name: 构建并推送镜像到阿里云
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            crpi-4z4v1n5g8hbg9g3x.cn-hangzhou.personal.cr.aliyuncs.com/beilv-agent/new-api:latest
            crpi-4z4v1n5g8hbg9g3x.cn-hangzhou.personal.cr.aliyuncs.com/beilv-agent/new-api:${{ env.VERSION }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          sbom: false
          build-args: |
            VERSION=${{ env.VERSION }}
            BUILD_DATE=${{ github.event.head_commit.timestamp }}
            VCS_REF=${{ github.sha }}
